apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
fileTree('scripts').each { apply from: "${it}" }

def API = 25
def minAPI = 16
def appId = 'ru.ktoddler'
def appVersionCode = gitCommitCount()
def appVersionName = "1.0.0.$appVersionCode"

android {
    compileSdkVersion API

    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId appId
        minSdkVersion minAPI
        targetSdkVersion API
        versionCode appVersionCode
        versionName appVersionName
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            debuggable true
            minifyEnabled false
            testCoverageEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        stage {
            minSdkVersion 21
            applicationId appId + ".stage"
        }
        production {
            minSdkVersion 16
            applicationId appId
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        incremental false
    }

    dataBinding {
        enabled = true
    }

    applicationVariants.all { variant ->

        def filename = "ktoddler-${variant.baseName}-${versionName}.apk"

        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, filename)
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
        return true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

kapt {
    generateStubs = true
}

def supportVers = '25.1.0'
def retrofitVers = '2.1.0'
def okHttpVers = '3.4.1'
def jacksonVers = '2.8.4'
def autoValueVers = '1.3'
def daggerVers = '2.7'
def rxVers = '2.0.1'
def mockitoVers = '2.4.2'

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin language
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Android support
    compile "com.android.support:appcompat-v7:$supportVers"
    compile "com.android.support:design:$supportVers"
    compile 'com.android.support:multidex:1.0.1'

    kapt "com.android.databinding:compiler:$androidPluginVersion"

    // Rest adapter
    compile "com.squareup.retrofit2:retrofit:$retrofitVers"
    compile "com.squareup.retrofit2:converter-jackson:$retrofitVers"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"

    // HTTP and WS
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVers"
    compile "com.squareup.okhttp3:okhttp-ws:$okHttpVers"

    // Reactive Java
    compile "io.reactivex.rxjava2:rxjava:$rxVers"
    compile "io.reactivex.rxjava2:rxandroid:$rxVers"
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'

    // Jackson parser
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVers"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVers"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVers"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVers"

    // Dagger
    compile "com.google.dagger:dagger:$daggerVers"
    kapt "com.google.dagger:dagger-compiler:$daggerVers"
    provided 'javax.annotation:jsr250-api:1.0'

    // database
    compile 'nl.qbusict:cupboard:2.1.4'

    // Image loader
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    // Application inspection
    compile 'com.facebook.stetho:stetho:1.4.1' // base app inspection
    compile 'com.facebook.stetho:stetho-okhttp3:1.4.1' // network inspection depended on okhttp client

    // autovalue
    provided "com.google.auto.value:auto-value:$autoValueVers"
    kapt "com.google.auto.value:auto-value:$autoValueVers"
    kapt "com.ryanharter.auto.value:auto-value-parcel:0.2.5"
    kapt "com.gabrielittner.auto.value:auto-value-with:1.0.0"

    // logging
    compile 'com.jakewharton.timber:timber:4.3.1'

    // Java 8 streams compatible
    compile 'com.annimon:stream:1.1.2'

    // UI
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    compile 'com.google.android:flexbox:0.2.3'

    // Testing
    kaptTest "com.google.dagger:dagger-compiler:$daggerVers"
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:$mockitoVers"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVers"
    androidTestCompile "org.mockito:mockito-core:$mockitoVers"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile "com.android.support:support-annotations:$supportVers"
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}